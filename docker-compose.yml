version: "3.8"

x-airflow-common:
  &airflow-common
  image: ${AIRFLOW_IMAGE_NAME:-extending_airflow:ultimo}
  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
  env_file:
      - .env
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: ${AIRFLOW__CORE__EXECUTOR}
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: ${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
    AIRFLOW__CELERY__RESULT_BACKEND: ${AIRFLOW__CELERY__RESULT_BACKEND}
    AIRFLOW__CELERY__BROKER_URL: ${AIRFLOW__CELERY__BROKER_URL}
    AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: ${AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION}
    AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES}
    AIRFLOW__API__AUTH_BACKENDS: ${AIRFLOW__API__AUTH_BACKENDS}
  volumes:
    - dags:/opt/airflow/dags
    - files:/opt/airflow/files
    - logs:/opt/airflow/logs
    - plugins:/opt/airflow/plugins
    - psql_script:/opt/airflow/psql_script

x-services-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy

services:
  postgres:
    container_name: psql_db_cont
    image: postgres:14.3
    env_file:
      - .env    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  airflow-webserver:
    <<: *airflow-common
    <<: *depends-on
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    <<: *depends-on
    command: scheduler
    restart: always

  airflow-worker:
    <<: *airflow-common
    <<: *depends-on
    command: celery worker
    environment:
      <<: *airflow-common-env
    restart: always

  airflow-init:
    <<: *airflow-common
    <<: *depends-on
    command: version
    env_file:
      - .env    
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: ${AIRFLOW_DB_UPGRADE}
      _AIRFLOW_WWW_USER_CREATE: ${AIRFLOW_WWW_USER_CREATE}
      _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_WWW_USER_USERNAME}
      _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_WWW_USER_USERNAME}

  flower:
    <<: *airflow-common
    <<: *depends-on
    command: celery flower
    ports:
      - "5555:5555"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

volumes:
    postgres:
      driver: local
      driver_opts:
        type: none
        device: "./data/psql_db"
        o: bind 
    dags:
      driver: local
      driver_opts:
        type: none
        device: "./data/dags"
        o: bind
    files:
      driver: local
      driver_opts:
        type: none
        device: "./data/files"
        o: bind
    logs:
      driver: local
      driver_opts:
        type: none
        device: "./data/logs"
        o: bind
    plugins:
      driver: local
      driver_opts:
        type: none
        device: "./data/plugins"
        o: bind
    psql_script:
      driver: local
      driver_opts:
        type: none
        device: "./data/psql_script"
        o: bind